-- http://disi.unitn.it/~rseba/DIDATTICA/fm2022/SLIDES/03-temporalLogics_slides.pdf

MODULE main
VAR
    User1: {N1, T1, C1};
    User2: {N2, T2, C2};
    turn:  {0, 1, 2};

INIT User1 = N1 & User2 = N2 & turn = 0;

TRANS User1 = N1 & User2 = N2 & turn = 0 -> (next(User1) = T1 & next(User2) = N2 & next(turn) = 1) |
                                            (next(User1) = N1 & next(User2) = T2 & next(turn) = 2);

TRANS User1 = T1 & User2 = N2 & turn = 1 -> (next(User1) = C1 & next(User2) = N2 & next(turn) = 1) |
                                            (next(User1) = T1 & next(User2) = T2 & next(turn) = 1);
TRANS User1 = C1 & User2 = N2 & turn = 1 -> (next(User1) = C1 & next(User2) = T2 & next(turn) = 1) |
                                            (next(User1) = N1 & next(User2) = N2 & next(turn) = 0);
TRANS User1 = T1 & User2 = T2 & turn = 1 ->  next(User1) = C1 & next(User2) = T2 & next(turn) = 1;
TRANS User1 = C1 & User2 = T2 & turn = 1 ->  next(User1) = N1 & next(User2) = T2 & next(turn) = 2;

TRANS User1 = N1 & User2 = T2 & turn = 2 -> (next(User1) = T1 & next(User2) = T2 & next(turn) = 2) |
                                            (next(User1) = N1 & next(User2) = C2 & next(turn) = 2);
TRANS User1 = T1 & User2 = T2 & turn = 2 ->  next(User1) = T1 & next(User2) = C2 & next(turn) = 2;
TRANS User1 = N1 & User2 = C2 & turn = 2 -> (next(User1) = T1 & next(User2) = C2 & next(turn) = 2) | (next(User1) = N1 & next(User2) = N2 & next(turn) = 0);
TRANS User1 = T1 & User2 = C2 & turn = 2 ->  next(User1) = T1 & next(User2) = N2 & next(turn) = 1;

------------------
-- LTL Examples --
------------------

-- Example 1: mutual exclusion (safety)
LTLSPEC G !(User1 = C1 & User2 = C2)
-- specification  G !(User1 = C1 & User2 = C2)  is true

-- Example 2: liveness
LTLSPEC F User1 = C1
-- specification  F User1 = C1  is false
-- as demonstrated by the following execution sequence
-- Trace Description: LTL Counterexample 
-- Trace Type: Counterexample 
--   -- Loop starts here
--   -> State: 1.1 <-
--     User1 = N1
--     User2 = N2
--     turn = 0
--   -> State: 1.2 <-
--     User2 = T2
--     turn = 2
--   -> State: 1.3 <-
--     User2 = C2
--   -> State: 1.4 <-
--     User2 = N2
--     turn = 0

-- Example 3: liveness
LTLSPEC G (User1 = T1 -> F User1 = C1)
-- specification  G (User1 = T1 ->  F User1 = C1)  is true

-- Example 4: fairness
LTLSPEC G F User1 = C1
-- specification  G ( F User1 = C1)  is false
-- as demonstrated by the following execution sequence
-- Trace Description: LTL Counterexample 
-- Trace Type: Counterexample 
--   -- Loop starts here
--   -> State: 2.1 <-
--     User1 = N1
--     User2 = N2
--     turn = 0
--   -> State: 2.2 <-
--     User2 = T2
--     turn = 2
--   -> State: 2.3 <-
--     User2 = C2
--   -> State: 2.4 <-
--     User2 = N2
--     turn = 0

-- Example 5: strong fairness
LTLSPEC (G F User1 = T1) -> (G F User1 = C1)
-- specification ( G ( F User1 = T1) ->  G ( F User1 = C1))  is true

-- Example 6: blocking
LTLSPEC G (User1 = N1 -> F User1 = T1)
-- specification  G (User1 = N1 ->  F User1 = T1)  is false
-- as demonstrated by the following execution sequence
-- Trace Description: LTL Counterexample 
-- Trace Type: Counterexample 
--   -- Loop starts here
--   -> State: 3.1 <-
--     User1 = N1
--     User2 = N2
--     turn = 0
--   -> State: 3.2 <-
--     User2 = T2
--     turn = 2
--   -> State: 3.3 <-
--     User2 = C2
--   -> State: 3.4 <-
--     User2 = N2
--     turn = 0

-- Example 7: Releases
LTLSPEC User1 = T1 V !(User1 = C1)
-- specification !(!(User1 = T1) U !(!(User1 = C1)))  is true

-- Example 8: XF
LTLSPEC X F (turn = 0)
-- specification  X ( F turn = 0)  is false
-- as demonstrated by the following execution sequence
-- Trace Description: LTL Counterexample 
-- Trace Type: Counterexample 
--   -> State: 4.1 <-
--     User1 = N1
--     User2 = N2
--     turn = 0
--   -- Loop starts here
--   -> State: 4.2 <-
--     User1 = T1
--     turn = 1
--   -> State: 4.3 <-
--     User2 = T2
--   -> State: 4.4 <-
--     User1 = C1
--   -> State: 4.5 <-
--     User1 = N1
--     turn = 2
--   -> State: 4.6 <-
--     User1 = T1
--   -> State: 4.7 <-
--     User2 = C2
--   -> State: 4.8 <-
--     User2 = N2
--     turn = 1

------------------
-- CTL Examples --
------------------

-- Example 6: blocking
CTLSPEC AG (User1 = N1 -> EF User1 = T1)
-- specification AG (User1 = N1 -> EF User1 = T1)  is true

-- Example 8:
CTLSPEC EG User1 = N1
-- specification EG User1 = N1  is true

-- Example 9:
CTLSPEC AF EG User1 = N1
-- specification AF (EG User1 = N1)  is true
